import React, { createContext, useContext, useState, ReactNode } from 'react';

type DataSourceCategory = 'Mock' | 'Real';

interface DataSourceContextProps {
  category: DataSourceCategory;
  setCategory: (category: DataSourceCategory) => void;
}

const DataSourceContext = createContext<DataSourceContextProps | undefined>(undefined);

export const DataSourceProvider: React.FC<{ children: ReactNode }> = ({ children }) => {
  const [category, setCategory] = useState<DataSourceCategory>('Mock');

  return (
    <DataSourceContext.Provider value={{ category, setCategory }}>
      {children}
    </DataSourceContext.Provider>
  );
};

export const useDataSource = () => {
  const context = useContext(DataSourceContext);
  if (!context) {
    throw new Error('useDataSource must be used within a DataSourceProvider');
  }
  return context;
};
